[tox]
min_version = 4.4.12
envlist =
    format
    lint
    test
    coverage-report


[testenv]
skip_install = true

extras =
    develop
    test

constrain_package_deps = false

setenv =
    COVERAGE_FILE=.coverage.{envname}
    ROBOT_BROWSER = headlesschrome

deps =
    -rrequirements-mxdev.txt
    coverage

commands =
    coverage run -m zope.testrunner -pvc --test-path=src/ -s collective.outputfilters.tinymceaccordion {posargs}

[testenv:format]
description = automatically reformat code
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run -a pyupgrade
    pre-commit run -a isort
    pre-commit run -a black
    pre-commit run -a zpretty

[testenv:lint]
description = run linters that will help improve the code style
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run -a

[testenv:coverage-report]
usedevelop = true
constrain_package_deps = false
setenv =
    COVERAGE_FILE=.coverage

deps =
    coverage    

commands =
    coverage erase
    coverage combine
    coverage report
    coverage xml
    coverage html -d reports/htmlcov
extras =
    test


[testenv:dependencies]
description = check if the package defines all its dependencies
skip_install = true
deps =
    build
    z3c.dependencychecker==2.14.3
commands =
    python -m build --sdist
    dependencychecker


[testenv:dependencies-graph]
description = generate a graph out of the dependencies of the package
skip_install = false
allowlist_externals =
    sh
deps =
    pipdeptree==2.5.1
    graphviz  # optional dependency of pipdeptree
commands =
    sh -c 'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg'


[testenv:release-check]
description = ensure that the distribution is ready to release
skip_install = true
deps =
    twine
    build
    towncrier
    -c https://dist.plone.org/release/6.1-dev/constraints.txt

commands =
    # fake version to not have to install the package
    # we build the change log as news entries might break
    # the README that is displayed on PyPI
    towncrier build --version=100.0.0 --yes
    python -m build --sdist
    twine check dist/*

[testenv:circular]
description = ensure there are no cyclic dependencies
use_develop = true
skip_install = false
# Here we must always constrain the package deps to what is already installed,
# otherwise we simply get the latest from PyPI, which may not work.
constrain_package_deps = true
set_env =
allowlist_externals =
    sh
deps =
    pipdeptree
    pipforester
    -c https://dist.plone.org/release/6.1-dev/constraints.txt

commands =
    # Generate the full dependency tree
    sh -c 'pipdeptree -j > forest.json'
    # Generate a DOT graph with the circular dependencies, if any
    pipforester -i forest.json -o forest.dot --cycles
    # Report if there are any circular dependencies, i.e. error if there are any
    pipforester -i forest.json --check-cycles -o /dev/null

